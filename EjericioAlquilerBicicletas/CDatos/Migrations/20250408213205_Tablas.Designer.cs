// <auto-generated />
using System;
using CDatos.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CDatos.Migrations
{
    [DbContext(typeof(AlquilerBiciletasContext))]
    [Migration("20250408213205_Tablas")]
    partial class Tablas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("en_US.UTF-8")
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CEntidades.Alquiler", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<TimeSpan>("Duracion")
                        .HasColumnType("time");

                    b.Property<DateTime>("FechaHoraFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaHoraInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdBicicleta")
                        .HasColumnType("int");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdEmpleado")
                        .HasColumnType("int");

                    b.Property<int>("IdEstacionDestino")
                        .HasColumnType("int");

                    b.Property<int>("IdEstacionOrigen")
                        .HasColumnType("int");

                    b.Property<double>("MontoTotal")
                        .HasColumnType("float");

                    b.HasKey("ID")
                        .HasName("PK_ID_ALQUILER");

                    b.HasIndex("IdBicicleta");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdEmpleado");

                    b.HasIndex("IdEstacionDestino");

                    b.HasIndex("IdEstacionOrigen");

                    b.ToTable("Alquiler");
                });

            modelBuilder.Entity("CEntidades.Bicicleta", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("EstacionActual")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdBicicleta")
                        .HasColumnType("int");

                    b.Property<int>("IdEstacion")
                        .HasColumnType("int");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PrecioHora")
                        .HasColumnType("float");

                    b.HasKey("ID")
                        .HasName("PK_ID_BICICLETA");

                    b.HasIndex("IdBicicleta");

                    b.HasIndex("IdEstacion");

                    b.ToTable("Bicicleta");
                });

            modelBuilder.Entity("CEntidades.Cliente", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DNI")
                        .HasColumnType("int");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID")
                        .HasName("PK_ID_CLIENTE");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("CEntidades.Empleado", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID")
                        .HasName("PK_ID_EMPLEADO");

                    b.ToTable("Empleado");
                });

            modelBuilder.Entity("CEntidades.Estacion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("BicicletasDisponibles")
                        .HasColumnType("int");

                    b.Property<int>("CapacidadMaxima")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID")
                        .HasName("PK_ID_ESTACION");

                    b.ToTable("Estacion");
                });

            modelBuilder.Entity("CEntidades.MarcaBicicleta", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID")
                        .HasName("PK_ID_MARCABICICLETA");

                    b.ToTable("MarcaBicicleta");
                });

            modelBuilder.Entity("CEntidades.TipoBicicleta", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID")
                        .HasName("PK_ID_TIPOBICICLETA");

                    b.ToTable("TipoBicicleta");
                });

            modelBuilder.Entity("CEntidades.Alquiler", b =>
                {
                    b.HasOne("CEntidades.Bicicleta", "Bicicleta")
                        .WithMany("Alquileres")
                        .HasForeignKey("IdBicicleta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CEntidades.Cliente", "Cliente")
                        .WithMany("Alquileres")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CEntidades.Empleado", "Empleado")
                        .WithMany("Alquileres")
                        .HasForeignKey("IdEmpleado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CEntidades.Estacion", "EstacionDestino")
                        .WithMany("AlquileresDestino")
                        .HasForeignKey("IdEstacionDestino")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CEntidades.Estacion", "EstacionOrigen")
                        .WithMany("AlquileresOrigen")
                        .HasForeignKey("IdEstacionOrigen")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bicicleta");

                    b.Navigation("Cliente");

                    b.Navigation("Empleado");

                    b.Navigation("EstacionDestino");

                    b.Navigation("EstacionOrigen");
                });

            modelBuilder.Entity("CEntidades.Bicicleta", b =>
                {
                    b.HasOne("CEntidades.MarcaBicicleta", "MarcaBicicleta")
                        .WithMany("Bicicletas")
                        .HasForeignKey("IdBicicleta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CEntidades.TipoBicicleta", "TipoBicicleta")
                        .WithMany("Bicicletas")
                        .HasForeignKey("IdBicicleta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CEntidades.Estacion", "Estacion")
                        .WithMany("Bicicletas")
                        .HasForeignKey("IdEstacion")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estacion");

                    b.Navigation("MarcaBicicleta");

                    b.Navigation("TipoBicicleta");
                });

            modelBuilder.Entity("CEntidades.Bicicleta", b =>
                {
                    b.Navigation("Alquileres");
                });

            modelBuilder.Entity("CEntidades.Cliente", b =>
                {
                    b.Navigation("Alquileres");
                });

            modelBuilder.Entity("CEntidades.Empleado", b =>
                {
                    b.Navigation("Alquileres");
                });

            modelBuilder.Entity("CEntidades.Estacion", b =>
                {
                    b.Navigation("AlquileresDestino");

                    b.Navigation("AlquileresOrigen");

                    b.Navigation("Bicicletas");
                });

            modelBuilder.Entity("CEntidades.MarcaBicicleta", b =>
                {
                    b.Navigation("Bicicletas");
                });

            modelBuilder.Entity("CEntidades.TipoBicicleta", b =>
                {
                    b.Navigation("Bicicletas");
                });
#pragma warning restore 612, 618
        }
    }
}
